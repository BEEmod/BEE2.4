"""Conditions that were present in older versions only."""
from typing import TypeVar, Callable
from precomp.conditions import RES_EXHAUSTED, make_test, make_result
import srctools.logger

COND_MOD_NAME = 'Removed'
T = TypeVar('T')
LOGGER = srctools.logger.get_logger(__name__)


def make_func(msg: str, ret_val: T) -> Callable[[], T]:
    """Deprecate a test or result."""
    used = False

    def deprecated() -> T:
        """This test/result is no longer used."""
        nonlocal used
        if not used:
            used = True
            LOGGER.warning(msg)

        return ret_val

    deprecated.__doc__ = msg

    return deprecated


def deprecate_test(name: str, *, msg: str) -> None:
    """Deprecate a result."""
    msg = f'The {name} test is no longer used.\n{msg}'

    make_test(name)(make_func(msg, False))


def deprecate_result(name: str, *, msg: str) -> None:
    """Deprecate a result."""
    msg = f'The {name} result is no longer used.\n{msg}'

    make_result(name)(make_func(msg, RES_EXHAUSTED))


deprecate_result(
    'HollowBrush',
    msg='The tiling system means this no longer must be done manually.',
)

deprecate_result(
    'MarkLocking',
    msg='Configure locking items in the enhanced editoritems configuration.',
)
deprecate_test(
    'LockingIO',
    msg='Configure locking items in the enhanced editoritems configuration.',
)

deprecate_result('changeOutputs', msg='Use ChangeIOType instead.')
deprecate_result('changeInputs', msg='Use ChangeIOType instead.')

deprecate_result(
    'FaithBullseye',
    msg='Faith Plate targets are now entirely generated by the compiler.',
)

deprecate_result(
    'faithMods',
    msg='''
The functions provided by this have been replaced by other features:
- `FaithType` can be used to check the type of the plate.
- `setFaithAttrs` can be used to modify the trigger.
- Use the `comp_kv_setter` entity to add outputs or modify keyvalues
  on the trigger(s).
    ''',
)
